name: Kernel Build with KernelSU and SUSFS

on:
  push:
    branches:
      - kernelsu
  pull_request:
    branches:
      - kernelsu
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KERNEL_REPO: ${{ github.repository }}
      BRANCH: kernelsu

    steps:
      - name: Setup Environment
        run: |
          sudo apt update -y
          sudo apt install -y build-essential bc bison flex libssl-dev \
              gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi ccache git libc6-dev \
              libncurses5-dev libelf-dev libdw-dev clang llvm lld lldb \
              python3 python3-pip python3-venv \
              lzop curl zip unzip fakeroot rsync libssl-dev lz4 cpio \
              python3-pycryptodome
              
      - name: Check Clang Version
        run: |
          clang --version
          which clang

      - name: Setup mkbootimg
        run: |
          # git clone https://github.com/LineageOS/android_system_tools_mkbootimg mkbootimg
          git clone https://android.googlesource.com/platform/system/tools/mkbootimg
          cd mkbootimg
          chmod +x mkbootimg.py
          sudo cp mkbootimg.py /usr/local/bin/mkbootimg.py
          sudo cp -r gki /usr/local/bin/gki
        env:
          PYTHONPATH: /usr/local/bin:/usr/local/bin/gki

      - name: Verify mkbootimg.py
        run: |
          which mkbootimg.py
          # mkbootimg.py --help
          # echo $PYTHONPATH
          
      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checking KernelSU Folder
        run: |
          ls -lh drivers/kernelsu || echo "drivers/kernelsu not found, as expected."

      - name: Remove Existing KernelSU Folder
        run: rm -rf drivers/kernelsu

      - name: Confirming KernelSU Folder is deleted 
        run: |
          ls -lh drivers/kernelsu || echo "drivers/kernelsu not found, as expected."

      - name: Setup KernelSU
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs

      - name: Update Makefile and Patch selinux/rules.c
        run: |
          # Update LLVM_PATH in Makefile
          sed -i 's|^override LLVM_PATH := .*|override LLVM_PATH := /usr/bin/|' Makefile
          
          # Patch selinux/rules.c
          sed -i '/\/\/ reset avc cache table, otherwise the new rules will not take effect if already denied/,/selinux_xfrm_notify_policyload();/c\
          // reset avc cache table, otherwise the new rules will not take effect if already denied\nstatic void reset_avc_cache()\n{\n#if 1\n\tavc_ss_reset(0);\n\tselnl_notify_policyload(0);\n\tselinux_status_update_policyload(0);\n#else\n\tstruct selinux_avc *avc = selinux_state.avc;\n\tavc_ss_reset(avc, 0);\n\tselnl_notify_policyload(0);\n\tselinux_status_update_policyload(&selinux_state, 0);\n#endif\n\tselinux_xfrm_notify_policyload();' drivers/kernelsu/selinux/rules.c    

      - name: Clone SUSFS Repository
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android13-5.10

      - name: Copying and Verifying SUSFS Files
        run: |
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-android13-5.10.patch ./
          cp susfs4ksu/kernel_patches/fs/* ./fs/
          cp susfs4ksu/kernel_patches/include/linux/* ./include/linux/
          find fs -iname "*sus*"
          find include/linux \( -iname "*susfs*" -o -iname "*sus_su*" \)

      - name: Apply SUSFS Patches
        run: |
          patch -p1 < 50_add_susfs_in_gki-android13-5.10.patch

      - name: Modify Build Script (For KSUNext CONFIG_KSU_WITH_KPROBES=n ) and Make it Executable
        run: |
          sed -i 's~make "\$@" || exit 1~make olddefconfig "\$@" || exit 1\n\tsed -i '\''/^# CONFIG_KSU_ALLOWLIST_WORKAROUND is not set/a # CONFIG_KSU_WITH_KPROBES is not set'\'' .config\n\tgrep "CONFIG_KSU" .config\n\tmake -j$(nproc) "\$@" || exit 1~' build_kernel.sh
          chmod +x build_kernel.sh

      - name: Compile Kernel
        run: ./build_kernel.sh

      #Uploads both files as zip.
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: compiled-kernel
      #     path: |
      #       boot.img
      #       arter97-kernel-*-kernelsu-boot.img

      #To extract Kernel Version to use in Upload Name
      - name: Get Kernel Version
        run: echo "KERNEL_VERSION=$(ls arter97-kernel-*-kernelsu-boot.img | sed -E 's/arter97-kernel-(.*)-kernelsu-boot.img/\1/')" >> $GITHUB_ENV

      - name: Upload arter97 KernelSU Boot Image
        uses: actions/upload-artifact@v4
        with:
          name: "arter97-kernel-${{ env.KERNEL_VERSION }}-KSUNext-SuSFS-boot.img"
          path: arter97-kernel-*-kernelsu-boot.img

