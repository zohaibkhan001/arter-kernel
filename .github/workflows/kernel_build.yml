name: Kernel Build with KernelSU and SUSFS

on:
  push:
    branches:
      - kernelsu
  pull_request:
    branches:
      - kernelsu
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KERNEL_REPO: ${{ github.repository }}
      BRANCH: kernelsu
      CLANG_VERSION: "19.1.7"

    steps:
      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential bc bison flex libssl-dev \
              gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi ccache git \
              libncurses5-dev libelf-dev libdw-dev \
              python3 python3-pip python3-venv \
              libtinfo5 lzop curl zip unzip fakeroot \
              python3-pycryptodome

      - name: Checkout Kernel Source
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download LLVM 19.1.7
        run: |
          curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-${{ env.CLANG_VERSION }}/clang+llvm-${{ env.CLANG_VERSION }}-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          tar -xf clang+llvm-${{ env.CLANG_VERSION }}-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          mv clang+llvm-${{ env.CLANG_VERSION }}-x86_64-linux-gnu-ubuntu-20.04 clang
          export PATH=$PWD/clang/bin:$PATH

      - name: Remove Existing KernelSU Folder
        run: rm -rf drivers/kernelsu

      - name: Setup KernelSU
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs

      - name: Update Makefile and Patch selinux/rules.c
        run: |
          # Update LLVM_PATH in Makefile
          sed -i 's|^override LLVM_PATH := .*|override LLVM_PATH := $(pwd)/clang|' Makefile
          
          # Patch selinux/rules.c
          sed -i '/\/\/ reset avc cache table, otherwise the new rules will not take effect if already denied/,/selinux_xfrm_notify_policyload();/c\
          // reset avc cache table, otherwise the new rules will not take effect if already denied\nstatic void reset_avc_cache()\n{\n#if 1\n\tavc_ss_reset(0);\n\tselnl_notify_policyload(0);\n\tselinux_status_update_policyload(0);\n#else\n\tstruct selinux_avc *avc = selinux_state.avc;\n\tavc_ss_reset(avc, 0);\n\tselnl_notify_policyload(0);\n\tselinux_status_update_policyload(&selinux_state, 0);\n#endif\n\tselinux_xfrm_notify_policyload();' drivers/kernelsu/selinux/rules.c    

      - name: Clone SUSFS Repository
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android13-5.10

      - name: Apply SUSFS Patches
        run: |
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-android13-5.10.patch ./
          cp susfs4ksu/kernel_patches/fs/* ./fs/
          cp susfs4ksu/kernel_patches/include/linux/* ./include/linux/
          patch -p1 < 50_add_susfs_in_gki-android13-5.10.patch

      - name: Make Build Script Executable
        run: chmod +x build.sh

      - name: Compile Kernel
        run: ./build.sh skip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compiled-kernel
          path: |
            boot.img
            arter97-kernel-*-kernelsu-boot.img
